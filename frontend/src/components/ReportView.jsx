import React, { useState } from 'react';
import {
  Paper,
  Typography,
  Box,
  Button,
  Divider,
  Card,
  CardContent,
  Alert
} from '@mui/material';
import { 
  Download, 
  Print, 
  Share,
  Description 
} from '@mui/icons-material';

const ReportView = ({ report, metadata }) => {
  const [copying, setCopying] = useState(false);

  const handleCopyReport = async () => {
    try {
      setCopying(true);
      await navigator.clipboard.writeText(report);
      // Could add a toast notification here
    } catch (error) {
      console.error('Failed to copy report:', error);
    } finally {
      setCopying(false);
    }
  };

  const handleDownloadReport = () => {
    const reportContent = `
IMAGE OSINT ANALYSIS REPORT
Generated: ${new Date().toLocaleString()}
Processing Time: ${metadata.processing_time?.toFixed(2)} seconds

${report}

---
Generated by Image OSINT Analysis Tool
    `.trim();

    const blob = new Blob([reportContent], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `osint_report_${new Date().toISOString().split('T')[0]}.txt`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
  };

  const handlePrintReport = () => {
    const printContent = `
      <html>
        <head>
          <title>OSINT Analysis Report</title>
          <style>
            body { font-family: Arial, sans-serif; margin: 40px; }
            h1 { color: #1976d2; }
            .header { border-bottom: 2px solid #1976d2; padding-bottom: 10px; margin-bottom: 20px; }
            .content { white-space: pre-wrap; line-height: 1.6; }
            .footer { margin-top: 40px; font-size: 12px; color: #666; }
          </style>
        </head>
        <body>
          <div class="header">
            <h1>Image OSINT Analysis Report</h1>
            <p>Generated: ${new Date().toLocaleString()}</p>
            <p>Processing Time: ${metadata.processing_time?.toFixed(2)} seconds</p>
          </div>
          <div class="content">${report}</div>
          <div class="footer">
            Generated by Image OSINT Analysis Tool
          </div>
        </body>
      </html>
    `;

    const printWindow = window.open('', '_blank');
    printWindow.document.write(printContent);
    printWindow.document.close();
    printWindow.print();
  };

  return (
    <Card>
      <CardContent>
        <Box sx={{ display: 'flex', alignItems: 'center', mb: 2 }}>
          <Description sx={{ mr: 1, color: 'primary.main' }} />
          <Typography variant="h6">
            Comprehensive Analysis Report
          </Typography>
        </Box>

        <Alert severity="info" sx={{ mb: 3 }}>
          This report contains a comprehensive analysis of the uploaded image, 
          including technical findings and recommendations.
        </Alert>

        <Box sx={{ mb: 3, display: 'flex', gap: 1, flexWrap: 'wrap' }}>
          <Button
            variant="outlined"
            startIcon={<Download />}
            onClick={handleDownloadReport}
            size="small"
          >
            Download Report
          </Button>
          <Button
            variant="outlined"
            startIcon={<Print />}
            onClick={handlePrintReport}
            size="small"
          >
            Print Report
          </Button>
          <Button
            variant="outlined"
            startIcon={<Share />}
            onClick={handleCopyReport}
            disabled={copying}
            size="small"
          >
            {copying ? 'Copying...' : 'Copy to Clipboard'}
          </Button>
        </Box>

        <Divider sx={{ mb: 3 }} />

        <Paper 
          variant="outlined" 
          sx={{ 
            p: 3, 
            bgcolor: 'grey.50',
            maxHeight: 600,
            overflow: 'auto'
          }}
        >
          <Typography
            variant="body2"
            component="pre"
            sx={{
              fontFamily: 'monospace',
              whiteSpace: 'pre-wrap',
              wordBreak: 'break-word',
              lineHeight: 1.6
            }}
          >
            {report || 'Report generation in progress or failed. Please check other analysis tabs for detailed results.'}
          </Typography>
        </Paper>

        <Alert severity="warning" sx={{ mt: 2 }}>
          <Typography variant="body2">
            <strong>Disclaimer:</strong> This analysis is automated and may contain inaccuracies. 
            Always verify findings through multiple sources and consider the limitations of 
            AI-based analysis tools.
          </Typography>
        </Alert>
      </CardContent>
    </Card>
  );
};

export default ReportView;